/*
 * generated by Xtext 2.33.0
 */
package componentesXtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CbappGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class CBAPPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "componentesXtext.Cbapp.CBAPP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCBAPPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cConectoresKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cConectoresAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cConectoresConectorParserRuleCall_2_2_0 = (RuleCall)cConectoresAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cConectoresAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cConectoresConectorParserRuleCall_2_3_1_0 = (RuleCall)cConectoresAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cComponentesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComponentesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComponentesComponenteParserRuleCall_5_0 = (RuleCall)cComponentesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cComponentesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cComponentesComponenteParserRuleCall_6_1_0 = (RuleCall)cComponentesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//CBAPP returns CBAPP:
		//    'CBAPP'
		//    '{'
		//        ('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
		//        'componentes' '{' componentes+=Componente ( "," componentes+=Componente)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CBAPP'
		//'{'
		//    ('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
		//    'componentes' '{' componentes+=Componente ( "," componentes+=Componente)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'CBAPP'
		public Keyword getCBAPPKeyword_0() { return cCBAPPKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'conectores'
		public Keyword getConectoresKeyword_2_0() { return cConectoresKeyword_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }
		
		//conectores+=Conector
		public Assignment getConectoresAssignment_2_2() { return cConectoresAssignment_2_2; }
		
		//Conector
		public RuleCall getConectoresConectorParserRuleCall_2_2_0() { return cConectoresConectorParserRuleCall_2_2_0; }
		
		//( "," conectores+=Conector)*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//conectores+=Conector
		public Assignment getConectoresAssignment_2_3_1() { return cConectoresAssignment_2_3_1; }
		
		//Conector
		public RuleCall getConectoresConectorParserRuleCall_2_3_1_0() { return cConectoresConectorParserRuleCall_2_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
		
		//'componentes'
		public Keyword getComponentesKeyword_3() { return cComponentesKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//componentes+=Componente
		public Assignment getComponentesAssignment_5() { return cComponentesAssignment_5; }
		
		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_5_0() { return cComponentesComponenteParserRuleCall_5_0; }
		
		//( "," componentes+=Componente)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//componentes+=Componente
		public Assignment getComponentesAssignment_6_1() { return cComponentesAssignment_6_1; }
		
		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_6_1_0() { return cComponentesComponenteParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ConectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "componentesXtext.Cbapp.Conector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNombreKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNombreAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNombreEStringParserRuleCall_2_1_0 = (RuleCall)cNombreAssignment_2_1.eContents().get(0);
		private final Keyword cEndAKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEndAAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEndAProvidedInterfaceCrossReference_4_0 = (CrossReference)cEndAAssignment_4.eContents().get(0);
		private final RuleCall cEndAProvidedInterfaceEStringParserRuleCall_4_0_1 = (RuleCall)cEndAProvidedInterfaceCrossReference_4_0.eContents().get(1);
		private final Keyword cEndBKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cEndBAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cEndBRequiredInterfaceCrossReference_6_0 = (CrossReference)cEndBAssignment_6.eContents().get(0);
		private final RuleCall cEndBRequiredInterfaceEStringParserRuleCall_6_0_1 = (RuleCall)cEndBRequiredInterfaceCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Conector returns Conector:
		//    'Conector'
		//    '{'
		//        ('nombre' nombre=EString)?
		//        'endA' endA=[ProvidedInterface|EString]
		//        'endB' endB=[RequiredInterface|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Conector'
		//'{'
		//    ('nombre' nombre=EString)?
		//    'endA' endA=[ProvidedInterface|EString]
		//    'endB' endB=[RequiredInterface|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Conector'
		public Keyword getConectorKeyword_0() { return cConectorKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('nombre' nombre=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'nombre'
		public Keyword getNombreKeyword_2_0() { return cNombreKeyword_2_0; }
		
		//nombre=EString
		public Assignment getNombreAssignment_2_1() { return cNombreAssignment_2_1; }
		
		//EString
		public RuleCall getNombreEStringParserRuleCall_2_1_0() { return cNombreEStringParserRuleCall_2_1_0; }
		
		//'endA'
		public Keyword getEndAKeyword_3() { return cEndAKeyword_3; }
		
		//endA=[ProvidedInterface|EString]
		public Assignment getEndAAssignment_4() { return cEndAAssignment_4; }
		
		//[ProvidedInterface|EString]
		public CrossReference getEndAProvidedInterfaceCrossReference_4_0() { return cEndAProvidedInterfaceCrossReference_4_0; }
		
		//EString
		public RuleCall getEndAProvidedInterfaceEStringParserRuleCall_4_0_1() { return cEndAProvidedInterfaceEStringParserRuleCall_4_0_1; }
		
		//'endB'
		public Keyword getEndBKeyword_5() { return cEndBKeyword_5; }
		
		//endB=[RequiredInterface|EString]
		public Assignment getEndBAssignment_6() { return cEndBAssignment_6; }
		
		//[RequiredInterface|EString]
		public CrossReference getEndBRequiredInterfaceCrossReference_6_0() { return cEndBRequiredInterfaceCrossReference_6_0; }
		
		//EString
		public RuleCall getEndBRequiredInterfaceEStringParserRuleCall_6_0_1() { return cEndBRequiredInterfaceEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ComponenteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "componentesXtext.Cbapp.Componente");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponenteAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComponenteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cProvidesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cProvidesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cProvidesProvidedInterfaceParserRuleCall_4_2_0 = (RuleCall)cProvidesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cProvidesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cProvidesProvidedInterfaceParserRuleCall_4_3_1_0 = (RuleCall)cProvidesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRequiresKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cRequiresAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cRequiresRequiredInterfaceParserRuleCall_5_2_0 = (RuleCall)cRequiresAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cRequiresAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cRequiresRequiredInterfaceParserRuleCall_5_3_1_0 = (RuleCall)cRequiresAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Componente returns Componente:
		//    {Componente}
		//    'Componente'
		//    '{'
		//        ('Name' Name=EString)?
		//        ('provides' '{' provides+=ProvidedInterface ( "," provides+=ProvidedInterface)* '}' )?
		//        ('requires' '{' requires+=RequiredInterface ( "," requires+=RequiredInterface)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Componente}
		//'Componente'
		//'{'
		//    ('Name' Name=EString)?
		//    ('provides' '{' provides+=ProvidedInterface ( "," provides+=ProvidedInterface)* '}' )?
		//    ('requires' '{' requires+=RequiredInterface ( "," requires+=RequiredInterface)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Componente}
		public Action getComponenteAction_0() { return cComponenteAction_0; }
		
		//'Componente'
		public Keyword getComponenteKeyword_1() { return cComponenteKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Name' Name=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//Name=EString
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_1_0() { return cNameEStringParserRuleCall_3_1_0; }
		
		//('provides' '{' provides+=ProvidedInterface ( "," provides+=ProvidedInterface)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'provides'
		public Keyword getProvidesKeyword_4_0() { return cProvidesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//provides+=ProvidedInterface
		public Assignment getProvidesAssignment_4_2() { return cProvidesAssignment_4_2; }
		
		//ProvidedInterface
		public RuleCall getProvidesProvidedInterfaceParserRuleCall_4_2_0() { return cProvidesProvidedInterfaceParserRuleCall_4_2_0; }
		
		//( "," provides+=ProvidedInterface)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//provides+=ProvidedInterface
		public Assignment getProvidesAssignment_4_3_1() { return cProvidesAssignment_4_3_1; }
		
		//ProvidedInterface
		public RuleCall getProvidesProvidedInterfaceParserRuleCall_4_3_1_0() { return cProvidesProvidedInterfaceParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('requires' '{' requires+=RequiredInterface ( "," requires+=RequiredInterface)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'requires'
		public Keyword getRequiresKeyword_5_0() { return cRequiresKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//requires+=RequiredInterface
		public Assignment getRequiresAssignment_5_2() { return cRequiresAssignment_5_2; }
		
		//RequiredInterface
		public RuleCall getRequiresRequiredInterfaceParserRuleCall_5_2_0() { return cRequiresRequiredInterfaceParserRuleCall_5_2_0; }
		
		//( "," requires+=RequiredInterface)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//requires+=RequiredInterface
		public Assignment getRequiresAssignment_5_3_1() { return cRequiresAssignment_5_3_1; }
		
		//RequiredInterface
		public RuleCall getRequiresRequiredInterfaceParserRuleCall_5_3_1_0() { return cRequiresRequiredInterfaceParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "componentesXtext.Cbapp.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ProvidedInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "componentesXtext.Cbapp.ProvidedInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProvidedInterfaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProvidedInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ProvidedInterface returns ProvidedInterface:
		//    {ProvidedInterface}
		//    'ProvidedInterface'
		//    '{'
		//        ('Name' Name=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ProvidedInterface}
		//'ProvidedInterface'
		//'{'
		//    ('Name' Name=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ProvidedInterface}
		public Action getProvidedInterfaceAction_0() { return cProvidedInterfaceAction_0; }
		
		//'ProvidedInterface'
		public Keyword getProvidedInterfaceKeyword_1() { return cProvidedInterfaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Name' Name=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//Name=EString
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_1_0() { return cNameEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RequiredInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "componentesXtext.Cbapp.RequiredInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRequiredInterfaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRequiredInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RequiredInterface returns RequiredInterface:
		//    {RequiredInterface}
		//    'RequiredInterface'
		//    '{'
		//        ('Name' Name=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RequiredInterface}
		//'RequiredInterface'
		//'{'
		//    ('Name' Name=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{RequiredInterface}
		public Action getRequiredInterfaceAction_0() { return cRequiredInterfaceAction_0; }
		
		//'RequiredInterface'
		public Keyword getRequiredInterfaceKeyword_1() { return cRequiredInterfaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Name' Name=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//Name=EString
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_1_0() { return cNameEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private final CBAPPElements pCBAPP;
	private final ConectorElements pConector;
	private final ComponenteElements pComponente;
	private final EStringElements pEString;
	private final ProvidedInterfaceElements pProvidedInterface;
	private final RequiredInterfaceElements pRequiredInterface;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CbappGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCBAPP = new CBAPPElements();
		this.pConector = new ConectorElements();
		this.pComponente = new ComponenteElements();
		this.pEString = new EStringElements();
		this.pProvidedInterface = new ProvidedInterfaceElements();
		this.pRequiredInterface = new RequiredInterfaceElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("componentesXtext.Cbapp".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//CBAPP returns CBAPP:
	//    'CBAPP'
	//    '{'
	//        ('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
	//        'componentes' '{' componentes+=Componente ( "," componentes+=Componente)* '}'
	//    '}';
	public CBAPPElements getCBAPPAccess() {
		return pCBAPP;
	}
	
	public ParserRule getCBAPPRule() {
		return getCBAPPAccess().getRule();
	}
	
	//Conector returns Conector:
	//    'Conector'
	//    '{'
	//        ('nombre' nombre=EString)?
	//        'endA' endA=[ProvidedInterface|EString]
	//        'endB' endB=[RequiredInterface|EString]
	//    '}';
	public ConectorElements getConectorAccess() {
		return pConector;
	}
	
	public ParserRule getConectorRule() {
		return getConectorAccess().getRule();
	}
	
	//Componente returns Componente:
	//    {Componente}
	//    'Componente'
	//    '{'
	//        ('Name' Name=EString)?
	//        ('provides' '{' provides+=ProvidedInterface ( "," provides+=ProvidedInterface)* '}' )?
	//        ('requires' '{' requires+=RequiredInterface ( "," requires+=RequiredInterface)* '}' )?
	//    '}';
	public ComponenteElements getComponenteAccess() {
		return pComponente;
	}
	
	public ParserRule getComponenteRule() {
		return getComponenteAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//ProvidedInterface returns ProvidedInterface:
	//    {ProvidedInterface}
	//    'ProvidedInterface'
	//    '{'
	//        ('Name' Name=EString)?
	//    '}';
	public ProvidedInterfaceElements getProvidedInterfaceAccess() {
		return pProvidedInterface;
	}
	
	public ParserRule getProvidedInterfaceRule() {
		return getProvidedInterfaceAccess().getRule();
	}
	
	//RequiredInterface returns RequiredInterface:
	//    {RequiredInterface}
	//    'RequiredInterface'
	//    '{'
	//        ('Name' Name=EString)?
	//    '}';
	public RequiredInterfaceElements getRequiredInterfaceAccess() {
		return pRequiredInterface;
	}
	
	public ParserRule getRequiredInterfaceRule() {
		return getRequiredInterfaceAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
