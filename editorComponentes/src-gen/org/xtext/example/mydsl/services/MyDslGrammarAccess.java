/*
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Root");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRootAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRootKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cConectoresKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cConectoresAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cConectoresConectorParserRuleCall_3_2_0 = (RuleCall)cConectoresAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cConectoresAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cConectoresConectorParserRuleCall_3_3_1_0 = (RuleCall)cConectoresAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cComponentesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cComponentesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cComponentesComponenteParserRuleCall_4_2_0 = (RuleCall)cComponentesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cComponentesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cComponentesComponenteParserRuleCall_4_3_1_0 = (RuleCall)cComponentesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Root returns Root:
		//    {Root}
		//    'Root'
		//    '{'
		//        ('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
		//        ('componentes' '{' componentes+=Componente ( "," componentes+=Componente)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Root}
		//'Root'
		//'{'
		//    ('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
		//    ('componentes' '{' componentes+=Componente ( "," componentes+=Componente)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Root}
		public Action getRootAction_0() { return cRootAction_0; }
		
		//'Root'
		public Keyword getRootKeyword_1() { return cRootKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'conectores'
		public Keyword getConectoresKeyword_3_0() { return cConectoresKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//conectores+=Conector
		public Assignment getConectoresAssignment_3_2() { return cConectoresAssignment_3_2; }
		
		//Conector
		public RuleCall getConectoresConectorParserRuleCall_3_2_0() { return cConectoresConectorParserRuleCall_3_2_0; }
		
		//( "," conectores+=Conector)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//conectores+=Conector
		public Assignment getConectoresAssignment_3_3_1() { return cConectoresAssignment_3_3_1; }
		
		//Conector
		public RuleCall getConectoresConectorParserRuleCall_3_3_1_0() { return cConectoresConectorParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('componentes' '{' componentes+=Componente ( "," componentes+=Componente)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'componentes'
		public Keyword getComponentesKeyword_4_0() { return cComponentesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//componentes+=Componente
		public Assignment getComponentesAssignment_4_2() { return cComponentesAssignment_4_2; }
		
		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_4_2_0() { return cComponentesComponenteParserRuleCall_4_2_0; }
		
		//( "," componentes+=Componente)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//componentes+=Componente
		public Assignment getComponentesAssignment_4_3_1() { return cComponentesAssignment_4_3_1; }
		
		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_4_3_1_0() { return cComponentesComponenteParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ConectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Conector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNombreAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNombreEStringParserRuleCall_1_0 = (RuleCall)cNombreAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cOrigenKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOrigenAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cOrigenComponenteCrossReference_4_0 = (CrossReference)cOrigenAssignment_4.eContents().get(0);
		private final RuleCall cOrigenComponenteEStringParserRuleCall_4_0_1 = (RuleCall)cOrigenComponenteCrossReference_4_0.eContents().get(1);
		private final Keyword cDestinoKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDestinoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDestinoComponenteCrossReference_6_0 = (CrossReference)cDestinoAssignment_6.eContents().get(0);
		private final RuleCall cDestinoComponenteEStringParserRuleCall_6_0_1 = (RuleCall)cDestinoComponenteCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Conector returns Conector:
		//    'Conector' nombre=EString
		//    '{'
		//        'origen' origen=[Componente|EString]
		//        'destino' destino=[Componente|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Conector' nombre=EString
		//'{'
		//    'origen' origen=[Componente|EString]
		//    'destino' destino=[Componente|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Conector'
		public Keyword getConectorKeyword_0() { return cConectorKeyword_0; }
		
		//nombre=EString
		public Assignment getNombreAssignment_1() { return cNombreAssignment_1; }
		
		//EString
		public RuleCall getNombreEStringParserRuleCall_1_0() { return cNombreEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'origen'
		public Keyword getOrigenKeyword_3() { return cOrigenKeyword_3; }
		
		//origen=[Componente|EString]
		public Assignment getOrigenAssignment_4() { return cOrigenAssignment_4; }
		
		//[Componente|EString]
		public CrossReference getOrigenComponenteCrossReference_4_0() { return cOrigenComponenteCrossReference_4_0; }
		
		//EString
		public RuleCall getOrigenComponenteEStringParserRuleCall_4_0_1() { return cOrigenComponenteEStringParserRuleCall_4_0_1; }
		
		//'destino'
		public Keyword getDestinoKeyword_5() { return cDestinoKeyword_5; }
		
		//destino=[Componente|EString]
		public Assignment getDestinoAssignment_6() { return cDestinoAssignment_6; }
		
		//[Componente|EString]
		public CrossReference getDestinoComponenteCrossReference_6_0() { return cDestinoComponenteCrossReference_6_0; }
		
		//EString
		public RuleCall getDestinoComponenteEStringParserRuleCall_6_0_1() { return cDestinoComponenteEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ComponenteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Componente");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponenteAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComponenteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Componente returns Componente:
		//    {Componente}
		//    'Componente' (Name=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Componente}
		//'Componente' (Name=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Componente}
		public Action getComponenteAction_0() { return cComponenteAction_0; }
		
		//'Componente'
		public Keyword getComponenteKeyword_1() { return cComponenteKeyword_1; }
		
		//(Name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final RootElements pRoot;
	private final ConectorElements pConector;
	private final ComponenteElements pComponente;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRoot = new RootElements();
		this.pConector = new ConectorElements();
		this.pComponente = new ComponenteElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Root returns Root:
	//    {Root}
	//    'Root'
	//    '{'
	//        ('conectores' '{' conectores+=Conector ( "," conectores+=Conector)* '}' )?
	//        ('componentes' '{' componentes+=Componente ( "," componentes+=Componente)* '}' )?
	//    '}';
	public RootElements getRootAccess() {
		return pRoot;
	}
	
	public ParserRule getRootRule() {
		return getRootAccess().getRule();
	}
	
	//Conector returns Conector:
	//    'Conector' nombre=EString
	//    '{'
	//        'origen' origen=[Componente|EString]
	//        'destino' destino=[Componente|EString]
	//    '}';
	public ConectorElements getConectorAccess() {
		return pConector;
	}
	
	public ParserRule getConectorRule() {
		return getConectorAccess().getRule();
	}
	
	//Componente returns Componente:
	//    {Componente}
	//    'Componente' (Name=EString)?
	//    ;
	public ComponenteElements getComponenteAccess() {
		return pComponente;
	}
	
	public ParserRule getComponenteRule() {
		return getComponenteAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
