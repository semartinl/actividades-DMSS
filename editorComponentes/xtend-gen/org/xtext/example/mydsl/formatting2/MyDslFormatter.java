/**
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.formatting2;

import com.google.inject.Inject;
import componentes.Componente;
import componentes.Conector;
import componentes.Root;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;

  protected void _format(final Root root, @Extension final IFormattableDocument document) {
    EList<Conector> _conectores = root.getConectores();
    for (final Conector conector : _conectores) {
      document.<Conector>format(conector);
    }
    EList<Componente> _componentes = root.getComponentes();
    for (final Componente componente : _componentes) {
      document.<Componente>format(componente);
    }
  }

  public void format(final Object root, final IFormattableDocument document) {
    if (root instanceof XtextResource) {
      _format((XtextResource)root, document);
      return;
    } else if (root instanceof Root) {
      _format((Root)root, document);
      return;
    } else if (root instanceof EObject) {
      _format((EObject)root, document);
      return;
    } else if (root == null) {
      _format((Void)null, document);
      return;
    } else if (root != null) {
      _format(root, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(root, document).toString());
    }
  }
}
